public class JavaHungry {
    public static void main(String args[])
    {
        try
        {
            int arr[]= {1, 2, 3, 4, 5};
            for (int i = 0; i <= 5; i++)
            {
                System.out.print ("Array elements are : " + arr[i] + "\n");
            }
        }
        catch (Exception e)
        {
            System.out.println ("Exception : " + e);
        }
        catch (ArrayIndexOutOfBoundsException ex)
        {
            System.out.println ("ArrayIndexOutOfBoundsException : "+ ex);
        }
    }
}


Output :
Compilation Error

java: exception java.lang.ArrayIndexOutOfBoundsException has already been caught
           catch (ArrayIndexOutOfBoundsException ex)
                   ^

1 error

Reason :
All catch blocks must be arranged from most specific to more general.
If we have a catch clause for both ArrayIndexOutOfBoundsException and Exception ,
we must put the catch for ArrayIndexOutOfBoundsException first in our code.
Otherwise ArrayIndexOutOfBoundsException would be caught by catch(Exception e),
because a catch argument can catch the specified exception or its subtypes.
As a result compiler will stop us from defining catch clauses that can never be reached.
